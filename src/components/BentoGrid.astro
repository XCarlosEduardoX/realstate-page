<div class="wrapper w-64">
    <div class="grid1 gridCell">
        <div class="data w-full h-full p-8 max-[580px]:p-2">
            <div
                class="flex flex-col justify-center h-full max-[580px]:flex-col-reverse"
            >
                <div
                    class="max-[580px]:w-full w-1/2 text-left max-[580px]:h-1/2"
                >
                    <h3>Marketing de propiedades</h3>
                    <p class="text-white">
                        Optimize for user experience and privacy. Use social
                        login integrations, lower user friction, incorporate
                        rich user profiling, and facilitate more transactions.
                    </p>
                </div>
                <div class="max-[580px]:w-full w-1/2 max-[580px]:h-1/2"></div>
            </div>
        </div>
    </div>
    <div class="grid2 gridCell">
        <div class="data w-full h-full px-8 max-[580px]:p-2">
            <div class="flex flex-col h-full items-center justify-center">
                <div class="text-left">
                    <h3>Valoración de propiedades</h3>
                    <p class="text-white">
                        Your login box must find the right balance between user
                        convenience, privacy and security.
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div class="grid3 gridCell">
        <div class="data w-full h-full px-8 max-[580px]:p-2">
            <div class="flex flex-col h-full items-center justify-center">
                <div class="text-left">
                    <h3>Valoración de propiedades</h3>
                    <p class="text-white">
                        Your login box must find the right balance between user
                        convenience, privacy and security.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .radial-gradient {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgb(192 132 252 / var(--tw-bg-opacity));
        filter: blur(40px);
    }
    h3 {
        font-size: 1.25rem;
        line-height: 1.5;
        letter-spacing: -0.017em;
        font-weight: 700;
        background: linear-gradient(90deg, #e0e3f7, #6c6f79);
        -webkit-background-clip: text;
        color: transparent;
        margin-bottom: 1rem;
    }
    p {
        font-size: 1.1rem;
        line-height: 1.5;
        letter-spacing: -0.017em;
        color: rgb(148 163 184 / var(--tw-text-opacity));
    }
    .data {
        z-index: 1;
    }
    .gridCell {
        border: 1px solid #4d4e6d;
        background-color: transparent;
        border-radius: 10px;
        position: relative;
        overflow: hidden;
        transition: transform 0.2s ease-in-out;
        display: flex;
        padding: 12px;
    }
    .wrapper {
        display: grid;
        width: 60% !important;
        grid-template-columns: 1fr 1fr; /* Dos columnas de igual tamaño */
        grid-template-rows: auto auto; /* Altura automática para las filas basada en el contenido */
        gap: 20px; /* Espacio entre las celdas del grid */
    }

    .wrapper div {
        border-radius: 3rem;
    }

    .gridCell::before {
        content: "";
        position: absolute;
        top: var(--top);
        left: var(--left);
        transform: translate(-50%, -50%);
        background: radial-gradient(#d07cd8, transparent, transparent);
        height: 500px;
        width: 500px;
        opacity: 0;
        transition:
            0.5s,
            top 0s,
            left 0s;
    }

    .gridCell:hover::before {
        opacity: 1;
    }
    .gridCell::after {
        content: "";
        position: absolute;
        inset: 2px;
        background-color: rgba(15, 23, 42, 0.95);
        border-radius: 3rem;
    }
    .grid1 {
        grid-column: 1 / -1; /* Extiende el grid1 a través de todas las columnas de la primera fila */
        grid-row: 1; /* Ubica el grid1 en la primera fila */
    }

    .grid2 {
        grid-column: 1; /* Primera columna de la segunda fila */
        grid-row: 2; /* Segunda fila */
    }

    .grid3 {
        grid-column: 2; /* Segunda columna de la segunda fila */
        grid-row: 2; /* Segunda fila */
    }

    /* Estilos adicionales */
    .grid1,
    .grid2,
    .grid3 {
        padding: 20px;
        text-align: center;
        font-size: 1.5em;
        height: 280px;
    }

    @media (max-width: 1108px) {
        .wrapper {
            width: 100% !important;
        }
        h3 {
            font-size: 1.25rem;
        }
        p {
            font-size: 1.1rem;
        }
    }

    @media (max-width: 900px) {
        .wrapper {
            width: 100% !important;
        }
        h3 {
            font-size: 1.25rem;
        }
        p {
            font-size: 1.1rem;
        }
    }

    @media (max-width: 790px) {
        .wrapper {
            display: flex;
            flex-direction: column;
        }

        .grid2,
        .grid3 {
            height: 50vh;
        }
        .grid1 {
            height: 60vh;
        }
    }
</style>
<script>
    const gridCells = document.querySelectorAll(".gridCell");
    gridCells.forEach((gridCell) => {
        // Ensure 'gridCell' is treated as an HTMLElement
        if (gridCell instanceof HTMLElement) {
            gridCell.addEventListener("mousemove", function (e) {
                const rect = this.getBoundingClientRect();
                const x = e.clientX - rect.left; // Coordenada X del mouse dentro del gridCell
                const y = e.clientY - rect.top; // Coordenada Y del mouse dentro del gridCell

                this.style.setProperty("--left", x + "px");
                this.style.setProperty("--top", y + "px");
            });
        }
    });

    // const gridCells = document.querySelectorAll(".gridCell");

    // function handleMouseMove(this: any, e: { pageX: number; pageY: number }) {
    //     const x = e.pageX - this.offsetLeft - this.offsetWidth / 2;
    //     const y = e.pageY - this.offsetTop - this.offsetHeight / 2;

    //     // const x = e.pageX - this.offsetLeft - 1030;
    //     // const y = e.pageY - this.offsetTop - this.offsetHeight / 2;

    // this.style.setProperty("--left", x + "px");
    // this.style.setProperty("--top", y + "px");
    // }

    // gridCells.forEach((gridCell) => {
    //     // Ensure 'gridCell' is treated as an HTMLElement
    //     if (gridCell instanceof HTMLElement) {
    //         gridCell.addEventListener("mousemove", function (e) {
    //             handleMouseMove.call(this, e);
    //         });
    //     }
    // });
</script>
